services:
  mtb-db:
    image: postgres:16
    environment:
      POSTGRES_DB: ${MTB_DB_NAME}
      POSTGRES_USER: ${MTB_DB_USER}
      POSTGRES_PASSWORD: ${MTB_DB_PASSWORD}
    volumes:
      - mtb-db:/var/lib/postgresql/data
      - ./config/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${MTB_DB_NAME} -U ${MTB_DB_USER}"]
      interval: 5s
      timeout: 5s
      retries: 3

  subscription-service:
    build: ./backend/subscription-service
    environment:
      GMAIL_USERNAME: ${GMAIL_USERNAME}
      GMAIL_PASSWORD: ${GMAIL_PASSWORD}
      NEW_POST_MESSAGE_LINK: mytinyblog.com
      POSTGRES_HOST: mtb-db
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${MTB_DB_NAME}
      POSTGRES_USER: ${MTB_DB_USER}
      POSTGRES_PASSWORD: ${MTB_DB_PASSWORD}
      SERVER_PORT: 8080
    restart: always
    depends_on:
      mtb-db:
        condition: service_healthy

  post-service:
    build: ./backend/post-service
    environment:
      POSTGRES_HOST: mtb-db
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${MTB_DB_NAME}
      POSTGRES_USER: ${MTB_DB_USER}
      POSTGRES_PASSWORD: ${MTB_DB_PASSWORD}
      SERVER_PORT: 8080
      GATEWAY_HOST: gateway
      GATEWAY_PORT: 8080
    restart: always
    depends_on:
      mtb-db:
        condition: service_healthy

  context-service:
    build: ./backend/context-service
    environment:
      H2_DB: MTB-DB
      H2_USER: ${MTB_DB_USER}
      H2_PASSWORD: ${MTB_DB_PASSWORD}
      SERVER_PORT: 8080
    restart: always

  gateway:
    build: ./backend/gateway
    environment:
      JWT_SECRET: ${JWT_SECRET}
      POSTGRES_HOST: mtb-db
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${MTB_DB_NAME}
      POSTGRES_USER: ${MTB_DB_USER}
      POSTGRES_PASSWORD: ${MTB_DB_PASSWORD}
      SERVER_PORT: 8080
      POST_SERVICE_HOST: post-service
      POST_SERVICE_PORT: 8080
      SUBSCRIPTION_SERVICE_HOST: subscription-service
      SUBSCRIPTION_SERVICE_PORT: 8080
      CONTEXT_SERVICE_HOST: context-service
      CONTEXT_SERVICE_PORT: 8080
    restart: always
    depends_on:
      mtb-db:
        condition: service_healthy

  next-mtb:
    build: ./frontend/next-app/mytinyblog-app
    restart: always

  nginx:
    image: nginx:latest
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
    restart: always

volumes:
  mtb-db:
